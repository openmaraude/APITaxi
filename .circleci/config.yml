version: 2

jobs:
  test:
    docker:
      - image: circleci/python:3-buster
      - image: circleci/postgres:10.5-postgis-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
      - image: redis:4.0.1
      - image: openmaraude/geotaxi:latest
    environment:
      SQLALCHEMY_DATABASE_URI: 'postgresql://ubuntu:@127.0.0.1:5432/circle_test'
      REDIS_URL: "redis://:@localhost:6379/0"
      SECURITY_PASSWORD_HASH: 'plaintext'
      APITAXI_CONFIG_FILE: 'test_settings.py'
    steps:
      - checkout
      - run: sudo apt-get install golang-go libgeos-dev
      - run: git clone https://github.com/openmaraude/faker && cd faker && go build && cd ..
      - run:
          name: install dependencies
          command: |
            mkdir -p ./venv
            virtualenv ./venv
            . venv/bin/activate
            pip install git+https://github.com/openmaraude/APITaxi_utils.git
            pip install git+https://github.com/openmaraude/APITaxi_models.git
            pip install .
            pip install .[tests]
      - run:
          name: Fake positions
          command: ./faker/faker
          background: true
      - run:
          name: Launch operateur server
          command: |
            . venv/bin/activate
            python tests/operateur_server.py
          background: true
      - run:
          name: Launch worker
          command: |
            . venv/bin/activate
            celery worker --app=celery_worker.celery -Q send_hail_time_test
          background: true
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            nosetests --stop --exclude APITaxi2

  testv2:
    docker:
      - image: circleci/python:3-buster
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get install -y postgis
            pip install tox
      - run:
          name: Run unittests
          command: |
            tox

  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker image
          command: |
            docker build -t openmaraude/apitaxi:${CIRCLE_TAG} .
            docker tag openmaraude/apitaxi:${CIRCLE_TAG} openmaraude/apitaxi:latest
      - run:
          name: Publish docker Image to hub.docker.com
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openmaraude/apitaxi:${CIRCLE_TAG}
            docker push openmaraude/apitaxi:latest

workflows:
  version: 2

  # Run unittest
  test:
    jobs:
      - test
      - testv2

  # Build artifacts
  artifacts:
    jobs:
      - test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

      - build:
          requires:
            - test
          filters:
            tags:
              only: /.*/
